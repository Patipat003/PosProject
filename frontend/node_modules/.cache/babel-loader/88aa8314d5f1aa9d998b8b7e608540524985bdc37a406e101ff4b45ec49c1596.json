{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\git\\\\frontend\\\\src\\\\pages\\\\ReportsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportsPage = () => {\n  _s();\n  const initialData = [{\n    product: \"Product A\",\n    monthlySales: [10, 20, 15, 30, 25, 40, 35, 50, 45, 60, 55, 70]\n  }, {\n    product: \"Product B\",\n    monthlySales: [5, 10, 8, 12, 20, 25, 22, 18, 24, 30, 28, 35]\n  }, {\n    product: \"Product C\",\n    monthlySales: [8, 12, 10, 15, 18, 20, 25, 30, 35, 40, 38, 45]\n  }];\n  const [data, setData] = useState(initialData);\n  const handleExportPDF = () => {\n    const doc = new jsPDF();\n\n    // Add title\n    doc.text(\"Monthly Sales Report\", 14, 16);\n\n    // Prepare table data\n    const tableData = data.map(row => [row.product, ...row.monthlySales, row.monthlySales.reduce((sum, val) => sum + val, 0)]);\n\n    // Add table\n    autoTable(doc, {\n      head: [[\"Product\", \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\", \"Yearly Total\"]],\n      body: tableData,\n      startY: 24\n    });\n\n    // Save PDF\n    doc.save(\"Monthly_Sales_Report.pdf\");\n  };\n  const handleExportExcel = () => {\n    const worksheetData = [[\"Product\", \"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\", \"Yearly Total\"], ...data.map(row => [row.product, ...row.monthlySales, row.monthlySales.reduce((sum, val) => sum + val, 0)])];\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Monthly Sales Report\");\n    XLSX.writeFile(workbook, \"Monthly_Sales_Report.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-8 bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-gray-800 mb-6\",\n      children: \"Monthly Sales Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportPDF,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\",\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExportExcel,\n        className: \"bg-green-500 text-white px-4 py-2 rounded shadow hover:bg-green-600\",\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-gray-700 mb-2\",\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: [\"This Year's Total Sales (All Products):\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: data.map(item => item.monthlySales.reduce((sum, val) => sum + val, 0)).reduce((total, yearly) => total + yearly, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), \" \", \"units\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 mt-4 text-right\",\n        children: \"Year: 2024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto bg-white p-6 rounded-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-auto w-full border-collapse border border-gray-200 text-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-300 px-4 py-2\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"].map(month => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-300 px-4 py-2\",\n              children: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border border-gray-300 px-4 py-2\",\n              children: \"Yearly Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-300 px-4 py-2 font-semibold\",\n              children: row.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), row.monthlySales.map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-300 px-4 py-2 text-center\",\n              children: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border border-gray-300 px-4 py-2 text-center font-bold\",\n              children: row.monthlySales.reduce((sum, val) => sum + val, 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, row.product, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportsPage, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n_c = ReportsPage;\nexport default ReportsPage;\nvar _c;\n$RefreshReg$(_c, \"ReportsPage\");","map":{"version":3,"names":["React","useState","jsPDF","autoTable","XLSX","jsxDEV","_jsxDEV","ReportsPage","_s","initialData","product","monthlySales","data","setData","handleExportPDF","doc","text","tableData","map","row","reduce","sum","val","head","body","startY","save","handleExportExcel","worksheetData","worksheet","utils","aoa_to_sheet","workbook","book_new","book_append_sheet","writeFile","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","item","total","yearly","month","rowIndex","value","index","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/git/frontend/src/pages/ReportsPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst ReportsPage = () => {\r\n  const initialData = [\r\n    {\r\n      product: \"Product A\",\r\n      monthlySales: [10, 20, 15, 30, 25, 40, 35, 50, 45, 60, 55, 70],\r\n    },\r\n    {\r\n      product: \"Product B\",\r\n      monthlySales: [5, 10, 8, 12, 20, 25, 22, 18, 24, 30, 28, 35],\r\n    },\r\n    {\r\n      product: \"Product C\",\r\n      monthlySales: [8, 12, 10, 15, 18, 20, 25, 30, 35, 40, 38, 45],\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState(initialData);\r\n\r\n  const handleExportPDF = () => {\r\n    const doc = new jsPDF();\r\n\r\n    // Add title\r\n    doc.text(\"Monthly Sales Report\", 14, 16);\r\n\r\n    // Prepare table data\r\n    const tableData = data.map((row) => [\r\n      row.product,\r\n      ...row.monthlySales,\r\n      row.monthlySales.reduce((sum, val) => sum + val, 0),\r\n    ]);\r\n\r\n    // Add table\r\n    autoTable(doc, {\r\n      head: [\r\n        [\r\n          \"Product\",\r\n          \"JAN\",\r\n          \"FEB\",\r\n          \"MAR\",\r\n          \"APR\",\r\n          \"MAY\",\r\n          \"JUN\",\r\n          \"JUL\",\r\n          \"AUG\",\r\n          \"SEP\",\r\n          \"OCT\",\r\n          \"NOV\",\r\n          \"DEC\",\r\n          \"Yearly Total\",\r\n        ],\r\n      ],\r\n      body: tableData,\r\n      startY: 24,\r\n    });\r\n\r\n    // Save PDF\r\n    doc.save(\"Monthly_Sales_Report.pdf\");\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const worksheetData = [\r\n      [\r\n        \"Product\",\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n        \"Yearly Total\",\r\n      ],\r\n      ...data.map((row) => [\r\n        row.product,\r\n        ...row.monthlySales,\r\n        row.monthlySales.reduce((sum, val) => sum + val, 0),\r\n      ]),\r\n    ];\r\n\r\n    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Monthly Sales Report\");\r\n\r\n    XLSX.writeFile(workbook, \"Monthly_Sales_Report.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-8 bg-gray-100 min-h-screen\">\r\n      <h1 className=\"text-4xl font-bold text-gray-800 mb-6\">Monthly Sales Report</h1>\r\n\r\n      <div className=\"flex gap-4 mb-6\">\r\n        <button\r\n          onClick={handleExportPDF}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded shadow hover:bg-blue-600\"\r\n        >\r\n          Export to PDF\r\n        </button>\r\n        <button\r\n          onClick={handleExportExcel}\r\n          className=\"bg-green-500 text-white px-4 py-2 rounded shadow hover:bg-green-600\"\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg mb-6\">\r\n        <h2 className=\"text-2xl font-semibold text-gray-700 mb-2\">Summary</h2>\r\n        <p className=\"text-gray-600\">\r\n          This Year's Total Sales (All Products):{\" \"}\r\n          <span className=\"font-bold\">\r\n            {data\r\n              .map((item) => item.monthlySales.reduce((sum, val) => sum + val, 0))\r\n              .reduce((total, yearly) => total + yearly, 0)}\r\n          </span>{\" \"}\r\n          units\r\n        </p>\r\n        <p className=\"text-gray-500 mt-4 text-right\">Year: 2024</p>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto bg-white p-6 rounded-lg shadow-lg\">\r\n        <table className=\"table-auto w-full border-collapse border border-gray-200 text-left\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border border-gray-300 px-4 py-2\">Product</th>\r\n              {[\r\n                \"JAN\",\r\n                \"FEB\",\r\n                \"MAR\",\r\n                \"APR\",\r\n                \"MAY\",\r\n                \"JUN\",\r\n                \"JUL\",\r\n                \"AUG\",\r\n                \"SEP\",\r\n                \"OCT\",\r\n                \"NOV\",\r\n                \"DEC\",\r\n              ].map((month) => (\r\n                <th key={month} className=\"border border-gray-300 px-4 py-2\">\r\n                  {month}\r\n                </th>\r\n              ))}\r\n              <th className=\"border border-gray-300 px-4 py-2\">Yearly Total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr\r\n                key={row.product}\r\n                className={rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"}\r\n              >\r\n                <td className=\"border border-gray-300 px-4 py-2 font-semibold\">\r\n                  {row.product}\r\n                </td>\r\n                {row.monthlySales.map((value, index) => (\r\n                  <td\r\n                    key={index}\r\n                    className=\"border border-gray-300 px-4 py-2 text-center\"\r\n                  >\r\n                    {value}\r\n                  </td>\r\n                ))}\r\n                <td className=\"border border-gray-300 px-4 py-2 text-center font-bold\">\r\n                  {row.monthlySales.reduce((sum, val) => sum + val, 0)}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}