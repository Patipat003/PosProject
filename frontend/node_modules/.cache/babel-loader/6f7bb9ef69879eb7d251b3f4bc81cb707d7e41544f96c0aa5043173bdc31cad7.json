{"ast":null,"code":"var _jsxFileName = \"E:\\\\Pos-project\\\\frontend\\\\src\\\\components\\\\layout\\\\ui\\\\ExportButtons.js\";\nimport React from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { jsPDF } from \"jspdf\";\n\n// ฟังก์ชันสำหรับการ Export ไปยัง PDF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleExportToPDF = (data, columns, filename = \"export.pdf\") => {\n  if (!Array.isArray(data) || !Array.isArray(columns)) {\n    console.error(\"Invalid data or columns\");\n    return;\n  }\n  const doc = new jsPDF();\n\n  // Set font size and style\n  doc.setFontSize(10);\n\n  // Title at the top of the page\n  doc.text(\"Data Export\", 14, 10);\n\n  // Set column header row style\n  let y = 20;\n  columns.forEach((column, index) => {\n    doc.text(column, 14 + index * 40, y); // Column name\n  });\n\n  // Set row data\n  y += 10; // Add some space between header and data rows\n  data.forEach((item, index) => {\n    columns.forEach((column, colIndex) => {\n      const value = item[column] !== undefined && item[column] !== null ? item[column] : 'N/A'; // Handle undefined or null values\n      doc.text(String(value), 14 + colIndex * 40, y); // Print value\n    });\n    y += 10; // Move to the next row\n  });\n\n  // Save PDF with the provided filename\n  doc.save(filename);\n};\nconst ExportButtons = ({\n  filteredTables,\n  columns,\n  filename = \"file.pdf\"\n}) => {\n  if (!Array.isArray(filteredTables) || !Array.isArray(columns)) {\n    console.error(\"Invalid data or columns passed to ExportButtons\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Invalid data or columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center space-x-4 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleExportToPDF(filteredTables, columns, filename),\n      className: \"bg-base-200 text-white px-6 py-3 rounded hover:bg-gray-700 transition duration-300 mt-4\",\n      children: \"Export to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n      data: filteredTables,\n      filename: filename.replace(\".pdf\", \".csv\") // Dynamically set the CSV filename\n      ,\n      className: \"bg-base-200 text-white px-6 py-3 rounded hover:bg-gray-700 transition duration-300 mt-4\",\n      children: \"Export to CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = ExportButtons;\nexport default ExportButtons;\nvar _c;\n$RefreshReg$(_c, \"ExportButtons\");","map":{"version":3,"names":["React","CSVLink","jsPDF","jsxDEV","_jsxDEV","handleExportToPDF","data","columns","filename","Array","isArray","console","error","doc","setFontSize","text","y","forEach","column","index","item","colIndex","value","undefined","String","save","ExportButtons","filteredTables","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","replace","_c","$RefreshReg$"],"sources":["E:/Pos-project/frontend/src/components/layout/ui/ExportButtons.js"],"sourcesContent":["import React from \"react\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { jsPDF } from \"jspdf\";\r\n\r\n// ฟังก์ชันสำหรับการ Export ไปยัง PDF\r\nconst handleExportToPDF = (data, columns, filename = \"export.pdf\") => {\r\n  if (!Array.isArray(data) || !Array.isArray(columns)) {\r\n    console.error(\"Invalid data or columns\");\r\n    return;\r\n  }\r\n\r\n  const doc = new jsPDF();\r\n  \r\n  // Set font size and style\r\n  doc.setFontSize(10);\r\n  \r\n  // Title at the top of the page\r\n  doc.text(\"Data Export\", 14, 10);\r\n  \r\n  // Set column header row style\r\n  let y = 20;\r\n  columns.forEach((column, index) => {\r\n    doc.text(column, 14 + index * 40, y); // Column name\r\n  });\r\n  \r\n  // Set row data\r\n  y += 10; // Add some space between header and data rows\r\n  data.forEach((item, index) => {\r\n    columns.forEach((column, colIndex) => {\r\n      const value = item[column] !== undefined && item[column] !== null ? item[column] : 'N/A'; // Handle undefined or null values\r\n      doc.text(String(value), 14 + colIndex * 40, y);  // Print value\r\n    });\r\n    y += 10; // Move to the next row\r\n  });\r\n\r\n  // Save PDF with the provided filename\r\n  doc.save(filename);\r\n};\r\n\r\n\r\n\r\nconst ExportButtons = ({ filteredTables, columns, filename = \"file.pdf\" }) => {\r\n  if (!Array.isArray(filteredTables) || !Array.isArray(columns)) {\r\n    console.error(\"Invalid data or columns passed to ExportButtons\");\r\n    return <div>Invalid data or columns</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-4 mb-4\">\r\n      <button\r\n        onClick={() => handleExportToPDF(filteredTables, columns, filename)}\r\n        className=\"bg-base-200 text-white px-6 py-3 rounded hover:bg-gray-700 transition duration-300 mt-4\"\r\n      >\r\n        Export to PDF\r\n      </button>\r\n      <CSVLink\r\n        data={filteredTables}\r\n        filename={filename.replace(\".pdf\", \".csv\")} // Dynamically set the CSV filename\r\n        className=\"bg-base-200 text-white px-6 py-3 rounded hover:bg-gray-700 transition duration-300 mt-4\"\r\n      >\r\n        Export to CSV\r\n      </CSVLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButtons;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}